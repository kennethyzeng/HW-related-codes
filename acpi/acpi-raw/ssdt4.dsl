/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20180629 (64-bit version)
 * Copyright (c) 2000 - 2018 Intel Corporation
 * 
 * Disassembling to symbolic ASL+ operators
 *
 * Disassembly of ssdt4.dat, Fri Oct 18 17:46:40 2024
 *
 * Original Table Header:
 *     Signature        "SSDT"
 *     Length           0x0003B2A5 (242341)
 *     Revision         0x02
 *     Checksum         0x51
 *     OEM ID           "INTEL"
 *     OEM Table ID     "SSDT  PM"
 *     OEM Revision     0x00004000 (16384)
 *     Compiler ID      "INTL"
 *     Compiler Version 0x20200925 (538970405)
 */
DefinitionBlock ("", "SSDT", 2, "INTEL", "SSDT  PM", 0x00004000)
{
    External (_SB_.SCK0.C000, DeviceObj)
    External (_SB_.SCK0.C000.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C001, DeviceObj)
    External (_SB_.SCK0.C001.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C002, DeviceObj)
    External (_SB_.SCK0.C002.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C003, DeviceObj)
    External (_SB_.SCK0.C003.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C004, DeviceObj)
    External (_SB_.SCK0.C004.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C005, DeviceObj)
    External (_SB_.SCK0.C005.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C006, DeviceObj)
    External (_SB_.SCK0.C006.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C007, DeviceObj)
    External (_SB_.SCK0.C007.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C008, DeviceObj)
    External (_SB_.SCK0.C008.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C009, DeviceObj)
    External (_SB_.SCK0.C009.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C00A, DeviceObj)
    External (_SB_.SCK0.C00A.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C00B, DeviceObj)
    External (_SB_.SCK0.C00B.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C00C, DeviceObj)
    External (_SB_.SCK0.C00C.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C00D, DeviceObj)
    External (_SB_.SCK0.C00D.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C00E, DeviceObj)
    External (_SB_.SCK0.C00E.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C00F, DeviceObj)
    External (_SB_.SCK0.C00F.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C010, DeviceObj)
    External (_SB_.SCK0.C010.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C011, DeviceObj)
    External (_SB_.SCK0.C011.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C012, DeviceObj)
    External (_SB_.SCK0.C012.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C013, DeviceObj)
    External (_SB_.SCK0.C013.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C014, DeviceObj)
    External (_SB_.SCK0.C014.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C015, DeviceObj)
    External (_SB_.SCK0.C015.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C016, DeviceObj)
    External (_SB_.SCK0.C016.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C017, DeviceObj)
    External (_SB_.SCK0.C017.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C018, DeviceObj)
    External (_SB_.SCK0.C018.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C019, DeviceObj)
    External (_SB_.SCK0.C019.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C01A, DeviceObj)
    External (_SB_.SCK0.C01A.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C01B, DeviceObj)
    External (_SB_.SCK0.C01B.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C01C, DeviceObj)
    External (_SB_.SCK0.C01C.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C01D, DeviceObj)
    External (_SB_.SCK0.C01D.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C01E, DeviceObj)
    External (_SB_.SCK0.C01E.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C01F, DeviceObj)
    External (_SB_.SCK0.C01F.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C020, DeviceObj)
    External (_SB_.SCK0.C020.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C021, DeviceObj)
    External (_SB_.SCK0.C021.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C022, DeviceObj)
    External (_SB_.SCK0.C022.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C023, DeviceObj)
    External (_SB_.SCK0.C023.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C024, DeviceObj)
    External (_SB_.SCK0.C024.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C025, DeviceObj)
    External (_SB_.SCK0.C025.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C026, DeviceObj)
    External (_SB_.SCK0.C026.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C027, DeviceObj)
    External (_SB_.SCK0.C027.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C028, DeviceObj)
    External (_SB_.SCK0.C028.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C029, DeviceObj)
    External (_SB_.SCK0.C029.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C02A, DeviceObj)
    External (_SB_.SCK0.C02A.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C02B, DeviceObj)
    External (_SB_.SCK0.C02B.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C02C, DeviceObj)
    External (_SB_.SCK0.C02C.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C02D, DeviceObj)
    External (_SB_.SCK0.C02D.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C02E, DeviceObj)
    External (_SB_.SCK0.C02E.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C02F, DeviceObj)
    External (_SB_.SCK0.C02F.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C030, DeviceObj)
    External (_SB_.SCK0.C030.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C031, DeviceObj)
    External (_SB_.SCK0.C031.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C032, DeviceObj)
    External (_SB_.SCK0.C032.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C033, DeviceObj)
    External (_SB_.SCK0.C033.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C034, DeviceObj)
    External (_SB_.SCK0.C034.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C035, DeviceObj)
    External (_SB_.SCK0.C035.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C036, DeviceObj)
    External (_SB_.SCK0.C036.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C037, DeviceObj)
    External (_SB_.SCK0.C037.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C038, DeviceObj)
    External (_SB_.SCK0.C038.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C039, DeviceObj)
    External (_SB_.SCK0.C039.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C03A, DeviceObj)
    External (_SB_.SCK0.C03A.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C03B, DeviceObj)
    External (_SB_.SCK0.C03B.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C03C, DeviceObj)
    External (_SB_.SCK0.C03C.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C03D, DeviceObj)
    External (_SB_.SCK0.C03D.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C03E, DeviceObj)
    External (_SB_.SCK0.C03E.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C03F, DeviceObj)
    External (_SB_.SCK0.C03F.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C040, DeviceObj)
    External (_SB_.SCK0.C040.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C041, DeviceObj)
    External (_SB_.SCK0.C041.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C042, DeviceObj)
    External (_SB_.SCK0.C042.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C043, DeviceObj)
    External (_SB_.SCK0.C043.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C044, DeviceObj)
    External (_SB_.SCK0.C044.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C045, DeviceObj)
    External (_SB_.SCK0.C045.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C046, DeviceObj)
    External (_SB_.SCK0.C046.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C047, DeviceObj)
    External (_SB_.SCK0.C047.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C048, DeviceObj)
    External (_SB_.SCK0.C048.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C049, DeviceObj)
    External (_SB_.SCK0.C049.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C04A, DeviceObj)
    External (_SB_.SCK0.C04A.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C04B, DeviceObj)
    External (_SB_.SCK0.C04B.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C04C, DeviceObj)
    External (_SB_.SCK0.C04C.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C04D, DeviceObj)
    External (_SB_.SCK0.C04D.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C04E, DeviceObj)
    External (_SB_.SCK0.C04E.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C04F, DeviceObj)
    External (_SB_.SCK0.C04F.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C050, DeviceObj)
    External (_SB_.SCK0.C050.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C051, DeviceObj)
    External (_SB_.SCK0.C051.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C052, DeviceObj)
    External (_SB_.SCK0.C052.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C053, DeviceObj)
    External (_SB_.SCK0.C053.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C054, DeviceObj)
    External (_SB_.SCK0.C054.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C055, DeviceObj)
    External (_SB_.SCK0.C055.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C056, DeviceObj)
    External (_SB_.SCK0.C056.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C057, DeviceObj)
    External (_SB_.SCK0.C057.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C058, DeviceObj)
    External (_SB_.SCK0.C058.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C059, DeviceObj)
    External (_SB_.SCK0.C059.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C05A, DeviceObj)
    External (_SB_.SCK0.C05A.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C05B, DeviceObj)
    External (_SB_.SCK0.C05B.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C05C, DeviceObj)
    External (_SB_.SCK0.C05C.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C05D, DeviceObj)
    External (_SB_.SCK0.C05D.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C05E, DeviceObj)
    External (_SB_.SCK0.C05E.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C05F, DeviceObj)
    External (_SB_.SCK0.C05F.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C060, DeviceObj)
    External (_SB_.SCK0.C060.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C061, DeviceObj)
    External (_SB_.SCK0.C061.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C062, DeviceObj)
    External (_SB_.SCK0.C062.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C063, DeviceObj)
    External (_SB_.SCK0.C063.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C064, DeviceObj)
    External (_SB_.SCK0.C064.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C065, DeviceObj)
    External (_SB_.SCK0.C065.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C066, DeviceObj)
    External (_SB_.SCK0.C066.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C067, DeviceObj)
    External (_SB_.SCK0.C067.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C068, DeviceObj)
    External (_SB_.SCK0.C068.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C069, DeviceObj)
    External (_SB_.SCK0.C069.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C06A, DeviceObj)
    External (_SB_.SCK0.C06A.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C06B, DeviceObj)
    External (_SB_.SCK0.C06B.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C06C, DeviceObj)
    External (_SB_.SCK0.C06C.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C06D, DeviceObj)
    External (_SB_.SCK0.C06D.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C06E, DeviceObj)
    External (_SB_.SCK0.C06E.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C06F, DeviceObj)
    External (_SB_.SCK0.C06F.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C070, DeviceObj)
    External (_SB_.SCK0.C070.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C071, DeviceObj)
    External (_SB_.SCK0.C071.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C072, DeviceObj)
    External (_SB_.SCK0.C072.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C073, DeviceObj)
    External (_SB_.SCK0.C073.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C074, DeviceObj)
    External (_SB_.SCK0.C074.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C075, DeviceObj)
    External (_SB_.SCK0.C075.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C076, DeviceObj)
    External (_SB_.SCK0.C076.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C077, DeviceObj)
    External (_SB_.SCK0.C077.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C078, DeviceObj)
    External (_SB_.SCK0.C078.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C079, DeviceObj)
    External (_SB_.SCK0.C079.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C07A, DeviceObj)
    External (_SB_.SCK0.C07A.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C07B, DeviceObj)
    External (_SB_.SCK0.C07B.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C07C, DeviceObj)
    External (_SB_.SCK0.C07C.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C07D, DeviceObj)
    External (_SB_.SCK0.C07D.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C07E, DeviceObj)
    External (_SB_.SCK0.C07E.HWPS, FieldUnitObj)
    External (_SB_.SCK0.C07F, DeviceObj)
    External (_SB_.SCK0.C07F.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C000, DeviceObj)
    External (_SB_.SCK1.C000.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C001, DeviceObj)
    External (_SB_.SCK1.C001.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C002, DeviceObj)
    External (_SB_.SCK1.C002.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C003, DeviceObj)
    External (_SB_.SCK1.C003.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C004, DeviceObj)
    External (_SB_.SCK1.C004.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C005, DeviceObj)
    External (_SB_.SCK1.C005.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C006, DeviceObj)
    External (_SB_.SCK1.C006.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C007, DeviceObj)
    External (_SB_.SCK1.C007.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C008, DeviceObj)
    External (_SB_.SCK1.C008.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C009, DeviceObj)
    External (_SB_.SCK1.C009.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C00A, DeviceObj)
    External (_SB_.SCK1.C00A.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C00B, DeviceObj)
    External (_SB_.SCK1.C00B.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C00C, DeviceObj)
    External (_SB_.SCK1.C00C.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C00D, DeviceObj)
    External (_SB_.SCK1.C00D.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C00E, DeviceObj)
    External (_SB_.SCK1.C00E.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C00F, DeviceObj)
    External (_SB_.SCK1.C00F.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C010, DeviceObj)
    External (_SB_.SCK1.C010.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C011, DeviceObj)
    External (_SB_.SCK1.C011.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C012, DeviceObj)
    External (_SB_.SCK1.C012.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C013, DeviceObj)
    External (_SB_.SCK1.C013.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C014, DeviceObj)
    External (_SB_.SCK1.C014.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C015, DeviceObj)
    External (_SB_.SCK1.C015.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C016, DeviceObj)
    External (_SB_.SCK1.C016.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C017, DeviceObj)
    External (_SB_.SCK1.C017.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C018, DeviceObj)
    External (_SB_.SCK1.C018.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C019, DeviceObj)
    External (_SB_.SCK1.C019.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C01A, DeviceObj)
    External (_SB_.SCK1.C01A.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C01B, DeviceObj)
    External (_SB_.SCK1.C01B.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C01C, DeviceObj)
    External (_SB_.SCK1.C01C.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C01D, DeviceObj)
    External (_SB_.SCK1.C01D.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C01E, DeviceObj)
    External (_SB_.SCK1.C01E.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C01F, DeviceObj)
    External (_SB_.SCK1.C01F.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C020, DeviceObj)
    External (_SB_.SCK1.C020.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C021, DeviceObj)
    External (_SB_.SCK1.C021.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C022, DeviceObj)
    External (_SB_.SCK1.C022.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C023, DeviceObj)
    External (_SB_.SCK1.C023.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C024, DeviceObj)
    External (_SB_.SCK1.C024.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C025, DeviceObj)
    External (_SB_.SCK1.C025.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C026, DeviceObj)
    External (_SB_.SCK1.C026.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C027, DeviceObj)
    External (_SB_.SCK1.C027.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C028, DeviceObj)
    External (_SB_.SCK1.C028.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C029, DeviceObj)
    External (_SB_.SCK1.C029.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C02A, DeviceObj)
    External (_SB_.SCK1.C02A.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C02B, DeviceObj)
    External (_SB_.SCK1.C02B.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C02C, DeviceObj)
    External (_SB_.SCK1.C02C.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C02D, DeviceObj)
    External (_SB_.SCK1.C02D.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C02E, DeviceObj)
    External (_SB_.SCK1.C02E.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C02F, DeviceObj)
    External (_SB_.SCK1.C02F.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C030, DeviceObj)
    External (_SB_.SCK1.C030.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C031, DeviceObj)
    External (_SB_.SCK1.C031.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C032, DeviceObj)
    External (_SB_.SCK1.C032.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C033, DeviceObj)
    External (_SB_.SCK1.C033.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C034, DeviceObj)
    External (_SB_.SCK1.C034.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C035, DeviceObj)
    External (_SB_.SCK1.C035.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C036, DeviceObj)
    External (_SB_.SCK1.C036.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C037, DeviceObj)
    External (_SB_.SCK1.C037.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C038, DeviceObj)
    External (_SB_.SCK1.C038.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C039, DeviceObj)
    External (_SB_.SCK1.C039.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C03A, DeviceObj)
    External (_SB_.SCK1.C03A.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C03B, DeviceObj)
    External (_SB_.SCK1.C03B.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C03C, DeviceObj)
    External (_SB_.SCK1.C03C.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C03D, DeviceObj)
    External (_SB_.SCK1.C03D.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C03E, DeviceObj)
    External (_SB_.SCK1.C03E.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C03F, DeviceObj)
    External (_SB_.SCK1.C03F.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C040, DeviceObj)
    External (_SB_.SCK1.C040.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C041, DeviceObj)
    External (_SB_.SCK1.C041.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C042, DeviceObj)
    External (_SB_.SCK1.C042.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C043, DeviceObj)
    External (_SB_.SCK1.C043.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C044, DeviceObj)
    External (_SB_.SCK1.C044.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C045, DeviceObj)
    External (_SB_.SCK1.C045.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C046, DeviceObj)
    External (_SB_.SCK1.C046.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C047, DeviceObj)
    External (_SB_.SCK1.C047.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C048, DeviceObj)
    External (_SB_.SCK1.C048.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C049, DeviceObj)
    External (_SB_.SCK1.C049.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C04A, DeviceObj)
    External (_SB_.SCK1.C04A.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C04B, DeviceObj)
    External (_SB_.SCK1.C04B.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C04C, DeviceObj)
    External (_SB_.SCK1.C04C.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C04D, DeviceObj)
    External (_SB_.SCK1.C04D.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C04E, DeviceObj)
    External (_SB_.SCK1.C04E.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C04F, DeviceObj)
    External (_SB_.SCK1.C04F.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C050, DeviceObj)
    External (_SB_.SCK1.C050.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C051, DeviceObj)
    External (_SB_.SCK1.C051.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C052, DeviceObj)
    External (_SB_.SCK1.C052.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C053, DeviceObj)
    External (_SB_.SCK1.C053.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C054, DeviceObj)
    External (_SB_.SCK1.C054.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C055, DeviceObj)
    External (_SB_.SCK1.C055.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C056, DeviceObj)
    External (_SB_.SCK1.C056.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C057, DeviceObj)
    External (_SB_.SCK1.C057.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C058, DeviceObj)
    External (_SB_.SCK1.C058.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C059, DeviceObj)
    External (_SB_.SCK1.C059.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C05A, DeviceObj)
    External (_SB_.SCK1.C05A.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C05B, DeviceObj)
    External (_SB_.SCK1.C05B.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C05C, DeviceObj)
    External (_SB_.SCK1.C05C.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C05D, DeviceObj)
    External (_SB_.SCK1.C05D.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C05E, DeviceObj)
    External (_SB_.SCK1.C05E.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C05F, DeviceObj)
    External (_SB_.SCK1.C05F.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C060, DeviceObj)
    External (_SB_.SCK1.C060.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C061, DeviceObj)
    External (_SB_.SCK1.C061.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C062, DeviceObj)
    External (_SB_.SCK1.C062.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C063, DeviceObj)
    External (_SB_.SCK1.C063.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C064, DeviceObj)
    External (_SB_.SCK1.C064.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C065, DeviceObj)
    External (_SB_.SCK1.C065.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C066, DeviceObj)
    External (_SB_.SCK1.C066.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C067, DeviceObj)
    External (_SB_.SCK1.C067.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C068, DeviceObj)
    External (_SB_.SCK1.C068.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C069, DeviceObj)
    External (_SB_.SCK1.C069.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C06A, DeviceObj)
    External (_SB_.SCK1.C06A.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C06B, DeviceObj)
    External (_SB_.SCK1.C06B.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C06C, DeviceObj)
    External (_SB_.SCK1.C06C.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C06D, DeviceObj)
    External (_SB_.SCK1.C06D.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C06E, DeviceObj)
    External (_SB_.SCK1.C06E.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C06F, DeviceObj)
    External (_SB_.SCK1.C06F.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C070, DeviceObj)
    External (_SB_.SCK1.C070.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C071, DeviceObj)
    External (_SB_.SCK1.C071.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C072, DeviceObj)
    External (_SB_.SCK1.C072.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C073, DeviceObj)
    External (_SB_.SCK1.C073.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C074, DeviceObj)
    External (_SB_.SCK1.C074.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C075, DeviceObj)
    External (_SB_.SCK1.C075.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C076, DeviceObj)
    External (_SB_.SCK1.C076.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C077, DeviceObj)
    External (_SB_.SCK1.C077.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C078, DeviceObj)
    External (_SB_.SCK1.C078.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C079, DeviceObj)
    External (_SB_.SCK1.C079.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C07A, DeviceObj)
    External (_SB_.SCK1.C07A.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C07B, DeviceObj)
    External (_SB_.SCK1.C07B.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C07C, DeviceObj)
    External (_SB_.SCK1.C07C.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C07D, DeviceObj)
    External (_SB_.SCK1.C07D.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C07E, DeviceObj)
    External (_SB_.SCK1.C07E.HWPS, FieldUnitObj)
    External (_SB_.SCK1.C07F, DeviceObj)
    External (_SB_.SCK1.C07F.HWPS, FieldUnitObj)
    External (CSEN, FieldUnitObj)
    External (FGTS, FieldUnitObj)
    External (HWAL, FieldUnitObj)
    External (HWEN, FieldUnitObj)
    External (PSEN, FieldUnitObj)
    External (TSEN, FieldUnitObj)

    Name (PETE, 0x00)
    Name (PSLM, Package (0x08)
    {
        0x00, 
        0x00, 
        0x00, 
        0x00, 
        0x00, 
        0x00, 
        0x00, 
        0x00
    })
    Name (TSLM, Package (0x08)
    {
        0x00, 
        0x00, 
        0x00, 
        0x00, 
        0x00, 
        0x00, 
        0x00, 
        0x00
    })
    Name (HI1, 0x00)
    Name (HW1, 0x00)
    Name (SDTL, 0x00)
    Scope (\_SB.SCK0.C000)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C000._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C000._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C000.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C000.PSDC */
        }
    }

    Scope (\_SB.SCK1.C000)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C000._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C000._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000020, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000020, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C000.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C000.PSDC */
        }
    }

    Scope (\_SB.SCK0.C001)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C001._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C001._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C001.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C001.PSDC */
        }
    }

    Scope (\_SB.SCK1.C001)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C001._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C001._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000021, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000021, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C001.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C001.PSDC */
        }
    }

    Scope (\_SB.SCK0.C002)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C002._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C002._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C002.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C002.PSDC */
        }
    }

    Scope (\_SB.SCK1.C002)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C002._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C002._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000022, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000022, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C002.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C002.PSDC */
        }
    }

    Scope (\_SB.SCK0.C003)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C003._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C003._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C003.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C003.PSDC */
        }
    }

    Scope (\_SB.SCK1.C003)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C003._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C003._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000023, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000023, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C003.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C003.PSDC */
        }
    }

    Scope (\_SB.SCK0.C004)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C004._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C004._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000004, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000004, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C004.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C004.PSDC */
        }
    }

    Scope (\_SB.SCK1.C004)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C004._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C004._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000024, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000024, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C004.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C004.PSDC */
        }
    }

    Scope (\_SB.SCK0.C005)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C005._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C005._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000005, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000005, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C005.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C005.PSDC */
        }
    }

    Scope (\_SB.SCK1.C005)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C005._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C005._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000025, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000025, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C005.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C005.PSDC */
        }
    }

    Scope (\_SB.SCK0.C006)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C006._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C006._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000006, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000006, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C006.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C006.PSDC */
        }
    }

    Scope (\_SB.SCK1.C006)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C006._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C006._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000026, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000026, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C006.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C006.PSDC */
        }
    }

    Scope (\_SB.SCK0.C007)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C007._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C007._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000007, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000007, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C007.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C007.PSDC */
        }
    }

    Scope (\_SB.SCK1.C007)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C007._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C007._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000027, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000027, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C007.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C007.PSDC */
        }
    }

    Scope (\_SB.SCK0.C008)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C008._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C008._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000008, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000008, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C008.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C008.PSDC */
        }
    }

    Scope (\_SB.SCK1.C008)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C008._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C008._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000028, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000028, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C008.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C008.PSDC */
        }
    }

    Scope (\_SB.SCK0.C009)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C009._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C009._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000009, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000009, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C009.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C009.PSDC */
        }
    }

    Scope (\_SB.SCK1.C009)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C009._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C009._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000029, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000029, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C009.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C009.PSDC */
        }
    }

    Scope (\_SB.SCK0.C00A)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C00A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C00A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000A, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000A, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C00A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C00A.PSDC */
        }
    }

    Scope (\_SB.SCK1.C00A)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C00A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C00A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002A, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002A, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C00A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C00A.PSDC */
        }
    }

    Scope (\_SB.SCK0.C00B)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C00B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C00B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000B, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000B, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C00B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C00B.PSDC */
        }
    }

    Scope (\_SB.SCK1.C00B)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C00B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C00B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002B, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002B, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C00B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C00B.PSDC */
        }
    }

    Scope (\_SB.SCK0.C00C)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C00C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C00C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000C, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000C, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C00C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C00C.PSDC */
        }
    }

    Scope (\_SB.SCK1.C00C)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C00C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C00C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002C, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002C, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C00C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C00C.PSDC */
        }
    }

    Scope (\_SB.SCK0.C00D)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C00D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C00D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000D, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000D, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C00D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C00D.PSDC */
        }
    }

    Scope (\_SB.SCK1.C00D)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C00D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C00D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002D, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002D, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C00D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C00D.PSDC */
        }
    }

    Scope (\_SB.SCK0.C00E)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C00E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C00E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000E, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000E, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C00E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C00E.PSDC */
        }
    }

    Scope (\_SB.SCK1.C00E)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C00E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C00E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002E, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002E, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C00E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C00E.PSDC */
        }
    }

    Scope (\_SB.SCK0.C00F)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C00F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C00F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000F, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000F, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C00F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C00F.PSDC */
        }
    }

    Scope (\_SB.SCK1.C00F)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C00F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C00F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002F, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002F, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C00F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C00F.PSDC */
        }
    }

    Scope (\_SB.SCK0.C010)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C010._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C010._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000010, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000010, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C010.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C010.PSDC */
        }
    }

    Scope (\_SB.SCK1.C010)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C010._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C010._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000030, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000030, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C010.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C010.PSDC */
        }
    }

    Scope (\_SB.SCK0.C011)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C011._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C011._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000011, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000011, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C011.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C011.PSDC */
        }
    }

    Scope (\_SB.SCK1.C011)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C011._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C011._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000031, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000031, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C011.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C011.PSDC */
        }
    }

    Scope (\_SB.SCK0.C012)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C012._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C012._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000012, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000012, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C012.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C012.PSDC */
        }
    }

    Scope (\_SB.SCK1.C012)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C012._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C012._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000032, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000032, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C012.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C012.PSDC */
        }
    }

    Scope (\_SB.SCK0.C013)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C013._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C013._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000013, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000013, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C013.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C013.PSDC */
        }
    }

    Scope (\_SB.SCK1.C013)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C013._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C013._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000033, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000033, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C013.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C013.PSDC */
        }
    }

    Scope (\_SB.SCK0.C014)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C014._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C014._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000014, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000014, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C014.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C014.PSDC */
        }
    }

    Scope (\_SB.SCK1.C014)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C014._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C014._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000034, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000034, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C014.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C014.PSDC */
        }
    }

    Scope (\_SB.SCK0.C015)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C015._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C015._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000015, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000015, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C015.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C015.PSDC */
        }
    }

    Scope (\_SB.SCK1.C015)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C015._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C015._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000035, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000035, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C015.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C015.PSDC */
        }
    }

    Scope (\_SB.SCK0.C016)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C016._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C016._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000016, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000016, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C016.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C016.PSDC */
        }
    }

    Scope (\_SB.SCK1.C016)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C016._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C016._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000036, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000036, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C016.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C016.PSDC */
        }
    }

    Scope (\_SB.SCK0.C017)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C017._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C017._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000017, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000017, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C017.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C017.PSDC */
        }
    }

    Scope (\_SB.SCK1.C017)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C017._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C017._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000037, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000037, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C017.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C017.PSDC */
        }
    }

    Scope (\_SB.SCK0.C018)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C018._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C018._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C018.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C018.PSDC */
        }
    }

    Scope (\_SB.SCK1.C018)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C018._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C018._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000020, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000020, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C018.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C018.PSDC */
        }
    }

    Scope (\_SB.SCK0.C019)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C019._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C019._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C019.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C019.PSDC */
        }
    }

    Scope (\_SB.SCK1.C019)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C019._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C019._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000021, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000021, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C019.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C019.PSDC */
        }
    }

    Scope (\_SB.SCK0.C01A)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C01A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C01A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C01A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C01A.PSDC */
        }
    }

    Scope (\_SB.SCK1.C01A)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C01A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C01A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000022, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000022, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C01A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C01A.PSDC */
        }
    }

    Scope (\_SB.SCK0.C01B)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C01B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C01B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C01B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C01B.PSDC */
        }
    }

    Scope (\_SB.SCK1.C01B)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C01B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C01B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000023, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000023, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C01B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C01B.PSDC */
        }
    }

    Scope (\_SB.SCK0.C01C)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C01C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C01C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000004, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000004, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C01C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C01C.PSDC */
        }
    }

    Scope (\_SB.SCK1.C01C)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C01C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C01C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000024, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000024, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C01C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C01C.PSDC */
        }
    }

    Scope (\_SB.SCK0.C01D)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C01D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C01D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000005, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000005, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C01D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C01D.PSDC */
        }
    }

    Scope (\_SB.SCK1.C01D)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C01D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C01D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000025, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000025, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C01D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C01D.PSDC */
        }
    }

    Scope (\_SB.SCK0.C01E)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C01E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C01E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000006, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000006, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C01E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C01E.PSDC */
        }
    }

    Scope (\_SB.SCK1.C01E)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C01E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C01E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000026, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000026, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C01E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C01E.PSDC */
        }
    }

    Scope (\_SB.SCK0.C01F)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C01F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C01F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000007, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000007, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C01F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C01F.PSDC */
        }
    }

    Scope (\_SB.SCK1.C01F)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C01F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C01F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000027, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000027, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C01F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C01F.PSDC */
        }
    }

    Scope (\_SB.SCK0.C020)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C020._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C020._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000008, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000008, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C020.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C020.PSDC */
        }
    }

    Scope (\_SB.SCK1.C020)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C020._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C020._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000028, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000028, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C020.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C020.PSDC */
        }
    }

    Scope (\_SB.SCK0.C021)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C021._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C021._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000009, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000009, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C021.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C021.PSDC */
        }
    }

    Scope (\_SB.SCK1.C021)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C021._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C021._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000029, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000029, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C021.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C021.PSDC */
        }
    }

    Scope (\_SB.SCK0.C022)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C022._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C022._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000A, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000A, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C022.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C022.PSDC */
        }
    }

    Scope (\_SB.SCK1.C022)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C022._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C022._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002A, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002A, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C022.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C022.PSDC */
        }
    }

    Scope (\_SB.SCK0.C023)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C023._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C023._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000B, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000B, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C023.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C023.PSDC */
        }
    }

    Scope (\_SB.SCK1.C023)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C023._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C023._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002B, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002B, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C023.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C023.PSDC */
        }
    }

    Scope (\_SB.SCK0.C024)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C024._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C024._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000C, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000C, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C024.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C024.PSDC */
        }
    }

    Scope (\_SB.SCK1.C024)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C024._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C024._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002C, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002C, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C024.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C024.PSDC */
        }
    }

    Scope (\_SB.SCK0.C025)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C025._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C025._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000D, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000D, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C025.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C025.PSDC */
        }
    }

    Scope (\_SB.SCK1.C025)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C025._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C025._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002D, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002D, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C025.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C025.PSDC */
        }
    }

    Scope (\_SB.SCK0.C026)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C026._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C026._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000E, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000E, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C026.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C026.PSDC */
        }
    }

    Scope (\_SB.SCK1.C026)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C026._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C026._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002E, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002E, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C026.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C026.PSDC */
        }
    }

    Scope (\_SB.SCK0.C027)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C027._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C027._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000F, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000000F, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C027.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C027.PSDC */
        }
    }

    Scope (\_SB.SCK1.C027)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C027._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C027._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002F, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x0000002F, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C027.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C027.PSDC */
        }
    }

    Scope (\_SB.SCK0.C028)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C028._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C028._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000010, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000010, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C028.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C028.PSDC */
        }
    }

    Scope (\_SB.SCK1.C028)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C028._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C028._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000030, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000030, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C028.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C028.PSDC */
        }
    }

    Scope (\_SB.SCK0.C029)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C029._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C029._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000011, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000011, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C029.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C029.PSDC */
        }
    }

    Scope (\_SB.SCK1.C029)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C029._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C029._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000031, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000031, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C029.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C029.PSDC */
        }
    }

    Scope (\_SB.SCK0.C02A)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C02A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C02A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000012, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000012, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C02A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C02A.PSDC */
        }
    }

    Scope (\_SB.SCK1.C02A)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C02A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C02A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000032, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000032, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C02A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C02A.PSDC */
        }
    }

    Scope (\_SB.SCK0.C02B)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C02B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C02B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000013, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000013, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C02B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C02B.PSDC */
        }
    }

    Scope (\_SB.SCK1.C02B)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C02B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C02B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000033, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000033, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C02B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C02B.PSDC */
        }
    }

    Scope (\_SB.SCK0.C02C)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C02C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C02C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000014, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000014, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C02C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C02C.PSDC */
        }
    }

    Scope (\_SB.SCK1.C02C)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C02C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C02C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000034, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000034, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C02C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C02C.PSDC */
        }
    }

    Scope (\_SB.SCK0.C02D)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C02D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C02D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000015, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000015, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C02D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C02D.PSDC */
        }
    }

    Scope (\_SB.SCK1.C02D)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C02D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C02D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000035, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000035, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C02D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C02D.PSDC */
        }
    }

    Scope (\_SB.SCK0.C02E)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C02E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C02E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000016, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000016, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C02E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C02E.PSDC */
        }
    }

    Scope (\_SB.SCK1.C02E)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C02E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C02E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000036, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000036, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C02E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C02E.PSDC */
        }
    }

    Scope (\_SB.SCK0.C02F)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C02F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C02F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000017, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000017, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C02F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C02F.PSDC */
        }
    }

    Scope (\_SB.SCK1.C02F)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C02F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C02F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000037, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000037, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C02F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C02F.PSDC */
        }
    }

    Scope (\_SB.SCK0.C030)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C030._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C030._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C030.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C030.PSDC */
        }
    }

    Scope (\_SB.SCK1.C030)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C030._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C030._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C030.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C030.PSDC */
        }
    }

    Scope (\_SB.SCK0.C031)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C031._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C031._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C031.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C031.PSDC */
        }
    }

    Scope (\_SB.SCK1.C031)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C031._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C031._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C031.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C031.PSDC */
        }
    }

    Scope (\_SB.SCK0.C032)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C032._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C032._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C032.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C032.PSDC */
        }
    }

    Scope (\_SB.SCK1.C032)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C032._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C032._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C032.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C032.PSDC */
        }
    }

    Scope (\_SB.SCK0.C033)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C033._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C033._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C033.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C033.PSDC */
        }
    }

    Scope (\_SB.SCK1.C033)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C033._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C033._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C033.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C033.PSDC */
        }
    }

    Scope (\_SB.SCK0.C034)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C034._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C034._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C034.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C034.PSDC */
        }
    }

    Scope (\_SB.SCK1.C034)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C034._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C034._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C034.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C034.PSDC */
        }
    }

    Scope (\_SB.SCK0.C035)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C035._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C035._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C035.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C035.PSDC */
        }
    }

    Scope (\_SB.SCK1.C035)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C035._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C035._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C035.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C035.PSDC */
        }
    }

    Scope (\_SB.SCK0.C036)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C036._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C036._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C036.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C036.PSDC */
        }
    }

    Scope (\_SB.SCK1.C036)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C036._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C036._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C036.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C036.PSDC */
        }
    }

    Scope (\_SB.SCK0.C037)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C037._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C037._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C037.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C037.PSDC */
        }
    }

    Scope (\_SB.SCK1.C037)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C037._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C037._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C037.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C037.PSDC */
        }
    }

    Scope (\_SB.SCK0.C038)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C038._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C038._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C038.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C038.PSDC */
        }
    }

    Scope (\_SB.SCK1.C038)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C038._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C038._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C038.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C038.PSDC */
        }
    }

    Scope (\_SB.SCK0.C039)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C039._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C039._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C039.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C039.PSDC */
        }
    }

    Scope (\_SB.SCK1.C039)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C039._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C039._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C039.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C039.PSDC */
        }
    }

    Scope (\_SB.SCK0.C03A)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C03A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C03A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C03A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C03A.PSDC */
        }
    }

    Scope (\_SB.SCK1.C03A)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C03A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C03A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C03A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C03A.PSDC */
        }
    }

    Scope (\_SB.SCK0.C03B)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C03B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C03B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C03B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C03B.PSDC */
        }
    }

    Scope (\_SB.SCK1.C03B)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C03B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C03B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C03B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C03B.PSDC */
        }
    }

    Scope (\_SB.SCK0.C03C)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C03C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C03C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C03C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C03C.PSDC */
        }
    }

    Scope (\_SB.SCK1.C03C)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C03C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C03C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C03C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C03C.PSDC */
        }
    }

    Scope (\_SB.SCK0.C03D)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C03D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C03D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C03D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C03D.PSDC */
        }
    }

    Scope (\_SB.SCK1.C03D)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C03D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C03D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C03D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C03D.PSDC */
        }
    }

    Scope (\_SB.SCK0.C03E)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C03E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C03E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C03E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C03E.PSDC */
        }
    }

    Scope (\_SB.SCK1.C03E)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C03E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C03E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C03E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C03E.PSDC */
        }
    }

    Scope (\_SB.SCK0.C03F)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C03F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C03F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C03F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C03F.PSDC */
        }
    }

    Scope (\_SB.SCK1.C03F)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C03F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C03F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C03F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C03F.PSDC */
        }
    }

    Scope (\_SB.SCK0.C040)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C040._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C040._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C040.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C040.PSDC */
        }
    }

    Scope (\_SB.SCK1.C040)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C040._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C040._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C040.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C040.PSDC */
        }
    }

    Scope (\_SB.SCK0.C041)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C041._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C041._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C041.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C041.PSDC */
        }
    }

    Scope (\_SB.SCK1.C041)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C041._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C041._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C041.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C041.PSDC */
        }
    }

    Scope (\_SB.SCK0.C042)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C042._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C042._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C042.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C042.PSDC */
        }
    }

    Scope (\_SB.SCK1.C042)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C042._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C042._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C042.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C042.PSDC */
        }
    }

    Scope (\_SB.SCK0.C043)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C043._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C043._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C043.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C043.PSDC */
        }
    }

    Scope (\_SB.SCK1.C043)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C043._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C043._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C043.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C043.PSDC */
        }
    }

    Scope (\_SB.SCK0.C044)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C044._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C044._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C044.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C044.PSDC */
        }
    }

    Scope (\_SB.SCK1.C044)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C044._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C044._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C044.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C044.PSDC */
        }
    }

    Scope (\_SB.SCK0.C045)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C045._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C045._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C045.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C045.PSDC */
        }
    }

    Scope (\_SB.SCK1.C045)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C045._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C045._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C045.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C045.PSDC */
        }
    }

    Scope (\_SB.SCK0.C046)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C046._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C046._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C046.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C046.PSDC */
        }
    }

    Scope (\_SB.SCK1.C046)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C046._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C046._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C046.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C046.PSDC */
        }
    }

    Scope (\_SB.SCK0.C047)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C047._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C047._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C047.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C047.PSDC */
        }
    }

    Scope (\_SB.SCK1.C047)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C047._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C047._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C047.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C047.PSDC */
        }
    }

    Scope (\_SB.SCK0.C048)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C048._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C048._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C048.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C048.PSDC */
        }
    }

    Scope (\_SB.SCK1.C048)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C048._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C048._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C048.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C048.PSDC */
        }
    }

    Scope (\_SB.SCK0.C049)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C049._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C049._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C049.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C049.PSDC */
        }
    }

    Scope (\_SB.SCK1.C049)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C049._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C049._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C049.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C049.PSDC */
        }
    }

    Scope (\_SB.SCK0.C04A)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C04A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C04A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C04A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C04A.PSDC */
        }
    }

    Scope (\_SB.SCK1.C04A)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C04A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C04A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C04A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C04A.PSDC */
        }
    }

    Scope (\_SB.SCK0.C04B)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C04B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C04B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C04B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C04B.PSDC */
        }
    }

    Scope (\_SB.SCK1.C04B)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C04B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C04B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C04B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C04B.PSDC */
        }
    }

    Scope (\_SB.SCK0.C04C)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C04C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C04C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C04C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C04C.PSDC */
        }
    }

    Scope (\_SB.SCK1.C04C)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C04C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C04C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C04C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C04C.PSDC */
        }
    }

    Scope (\_SB.SCK0.C04D)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C04D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C04D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C04D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C04D.PSDC */
        }
    }

    Scope (\_SB.SCK1.C04D)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C04D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C04D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C04D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C04D.PSDC */
        }
    }

    Scope (\_SB.SCK0.C04E)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C04E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C04E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C04E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C04E.PSDC */
        }
    }

    Scope (\_SB.SCK1.C04E)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C04E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C04E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C04E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C04E.PSDC */
        }
    }

    Scope (\_SB.SCK0.C04F)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C04F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C04F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C04F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C04F.PSDC */
        }
    }

    Scope (\_SB.SCK1.C04F)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C04F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C04F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C04F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C04F.PSDC */
        }
    }

    Scope (\_SB.SCK0.C050)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C050._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C050._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C050.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C050.PSDC */
        }
    }

    Scope (\_SB.SCK1.C050)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C050._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C050._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C050.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C050.PSDC */
        }
    }

    Scope (\_SB.SCK0.C051)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C051._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C051._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C051.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C051.PSDC */
        }
    }

    Scope (\_SB.SCK1.C051)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C051._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C051._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C051.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C051.PSDC */
        }
    }

    Scope (\_SB.SCK0.C052)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C052._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C052._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C052.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C052.PSDC */
        }
    }

    Scope (\_SB.SCK1.C052)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C052._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C052._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C052.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C052.PSDC */
        }
    }

    Scope (\_SB.SCK0.C053)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C053._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C053._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C053.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C053.PSDC */
        }
    }

    Scope (\_SB.SCK1.C053)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C053._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C053._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C053.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C053.PSDC */
        }
    }

    Scope (\_SB.SCK0.C054)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C054._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C054._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C054.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C054.PSDC */
        }
    }

    Scope (\_SB.SCK1.C054)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C054._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C054._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C054.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C054.PSDC */
        }
    }

    Scope (\_SB.SCK0.C055)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C055._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C055._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C055.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C055.PSDC */
        }
    }

    Scope (\_SB.SCK1.C055)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C055._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C055._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C055.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C055.PSDC */
        }
    }

    Scope (\_SB.SCK0.C056)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C056._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C056._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C056.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C056.PSDC */
        }
    }

    Scope (\_SB.SCK1.C056)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C056._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C056._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C056.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C056.PSDC */
        }
    }

    Scope (\_SB.SCK0.C057)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C057._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C057._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C057.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C057.PSDC */
        }
    }

    Scope (\_SB.SCK1.C057)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C057._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C057._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C057.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C057.PSDC */
        }
    }

    Scope (\_SB.SCK0.C058)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C058._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C058._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C058.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C058.PSDC */
        }
    }

    Scope (\_SB.SCK1.C058)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C058._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C058._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C058.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C058.PSDC */
        }
    }

    Scope (\_SB.SCK0.C059)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C059._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C059._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C059.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C059.PSDC */
        }
    }

    Scope (\_SB.SCK1.C059)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C059._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C059._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C059.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C059.PSDC */
        }
    }

    Scope (\_SB.SCK0.C05A)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C05A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C05A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C05A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C05A.PSDC */
        }
    }

    Scope (\_SB.SCK1.C05A)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C05A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C05A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C05A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C05A.PSDC */
        }
    }

    Scope (\_SB.SCK0.C05B)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C05B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C05B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C05B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C05B.PSDC */
        }
    }

    Scope (\_SB.SCK1.C05B)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C05B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C05B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C05B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C05B.PSDC */
        }
    }

    Scope (\_SB.SCK0.C05C)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C05C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C05C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C05C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C05C.PSDC */
        }
    }

    Scope (\_SB.SCK1.C05C)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C05C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C05C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C05C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C05C.PSDC */
        }
    }

    Scope (\_SB.SCK0.C05D)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C05D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C05D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C05D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C05D.PSDC */
        }
    }

    Scope (\_SB.SCK1.C05D)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C05D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C05D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C05D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C05D.PSDC */
        }
    }

    Scope (\_SB.SCK0.C05E)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C05E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C05E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C05E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C05E.PSDC */
        }
    }

    Scope (\_SB.SCK1.C05E)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C05E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C05E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C05E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C05E.PSDC */
        }
    }

    Scope (\_SB.SCK0.C05F)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C05F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C05F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C05F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C05F.PSDC */
        }
    }

    Scope (\_SB.SCK1.C05F)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C05F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C05F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C05F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C05F.PSDC */
        }
    }

    Scope (\_SB.SCK0.C060)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C060._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C060._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C060.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C060.PSDC */
        }
    }

    Scope (\_SB.SCK1.C060)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C060._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C060._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C060.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C060.PSDC */
        }
    }

    Scope (\_SB.SCK0.C061)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C061._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C061._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C061.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C061.PSDC */
        }
    }

    Scope (\_SB.SCK1.C061)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C061._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C061._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C061.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C061.PSDC */
        }
    }

    Scope (\_SB.SCK0.C062)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C062._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C062._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C062.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C062.PSDC */
        }
    }

    Scope (\_SB.SCK1.C062)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C062._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C062._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C062.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C062.PSDC */
        }
    }

    Scope (\_SB.SCK0.C063)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C063._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C063._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C063.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C063.PSDC */
        }
    }

    Scope (\_SB.SCK1.C063)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C063._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C063._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C063.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C063.PSDC */
        }
    }

    Scope (\_SB.SCK0.C064)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C064._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C064._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C064.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C064.PSDC */
        }
    }

    Scope (\_SB.SCK1.C064)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C064._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C064._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C064.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C064.PSDC */
        }
    }

    Scope (\_SB.SCK0.C065)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C065._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C065._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C065.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C065.PSDC */
        }
    }

    Scope (\_SB.SCK1.C065)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C065._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C065._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C065.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C065.PSDC */
        }
    }

    Scope (\_SB.SCK0.C066)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C066._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C066._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C066.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C066.PSDC */
        }
    }

    Scope (\_SB.SCK1.C066)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C066._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C066._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C066.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C066.PSDC */
        }
    }

    Scope (\_SB.SCK0.C067)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C067._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C067._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C067.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C067.PSDC */
        }
    }

    Scope (\_SB.SCK1.C067)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C067._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C067._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C067.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C067.PSDC */
        }
    }

    Scope (\_SB.SCK0.C068)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C068._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C068._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C068.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C068.PSDC */
        }
    }

    Scope (\_SB.SCK1.C068)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C068._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C068._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C068.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C068.PSDC */
        }
    }

    Scope (\_SB.SCK0.C069)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C069._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C069._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C069.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C069.PSDC */
        }
    }

    Scope (\_SB.SCK1.C069)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C069._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C069._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C069.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C069.PSDC */
        }
    }

    Scope (\_SB.SCK0.C06A)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C06A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C06A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C06A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C06A.PSDC */
        }
    }

    Scope (\_SB.SCK1.C06A)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C06A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C06A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C06A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C06A.PSDC */
        }
    }

    Scope (\_SB.SCK0.C06B)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C06B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C06B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C06B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C06B.PSDC */
        }
    }

    Scope (\_SB.SCK1.C06B)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C06B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C06B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C06B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C06B.PSDC */
        }
    }

    Scope (\_SB.SCK0.C06C)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C06C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C06C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C06C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C06C.PSDC */
        }
    }

    Scope (\_SB.SCK1.C06C)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C06C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C06C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C06C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C06C.PSDC */
        }
    }

    Scope (\_SB.SCK0.C06D)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C06D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C06D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C06D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C06D.PSDC */
        }
    }

    Scope (\_SB.SCK1.C06D)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C06D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C06D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C06D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C06D.PSDC */
        }
    }

    Scope (\_SB.SCK0.C06E)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C06E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C06E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C06E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C06E.PSDC */
        }
    }

    Scope (\_SB.SCK1.C06E)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C06E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C06E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C06E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C06E.PSDC */
        }
    }

    Scope (\_SB.SCK0.C06F)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C06F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C06F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C06F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C06F.PSDC */
        }
    }

    Scope (\_SB.SCK1.C06F)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C06F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C06F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C06F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C06F.PSDC */
        }
    }

    Scope (\_SB.SCK0.C070)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C070._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C070._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C070.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C070.PSDC */
        }
    }

    Scope (\_SB.SCK1.C070)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C070._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C070._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C070.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C070.PSDC */
        }
    }

    Scope (\_SB.SCK0.C071)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C071._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C071._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C071.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C071.PSDC */
        }
    }

    Scope (\_SB.SCK1.C071)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C071._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C071._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C071.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C071.PSDC */
        }
    }

    Scope (\_SB.SCK0.C072)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C072._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C072._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C072.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C072.PSDC */
        }
    }

    Scope (\_SB.SCK1.C072)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C072._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C072._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C072.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C072.PSDC */
        }
    }

    Scope (\_SB.SCK0.C073)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C073._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C073._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C073.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C073.PSDC */
        }
    }

    Scope (\_SB.SCK1.C073)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C073._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C073._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C073.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C073.PSDC */
        }
    }

    Scope (\_SB.SCK0.C074)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C074._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C074._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C074.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C074.PSDC */
        }
    }

    Scope (\_SB.SCK1.C074)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C074._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C074._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C074.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C074.PSDC */
        }
    }

    Scope (\_SB.SCK0.C075)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C075._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C075._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C075.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C075.PSDC */
        }
    }

    Scope (\_SB.SCK1.C075)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C075._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C075._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C075.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C075.PSDC */
        }
    }

    Scope (\_SB.SCK0.C076)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C076._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C076._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C076.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C076.PSDC */
        }
    }

    Scope (\_SB.SCK1.C076)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C076._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C076._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C076.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C076.PSDC */
        }
    }

    Scope (\_SB.SCK0.C077)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C077._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C077._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C077.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C077.PSDC */
        }
    }

    Scope (\_SB.SCK1.C077)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C077._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C077._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C077.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C077.PSDC */
        }
    }

    Scope (\_SB.SCK0.C078)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C078._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C078._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C078.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C078.PSDC */
        }
    }

    Scope (\_SB.SCK1.C078)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C078._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C078._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C078.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C078.PSDC */
        }
    }

    Scope (\_SB.SCK0.C079)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C079._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C079._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C079.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C079.PSDC */
        }
    }

    Scope (\_SB.SCK1.C079)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C079._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C079._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C079.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C079.PSDC */
        }
    }

    Scope (\_SB.SCK0.C07A)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C07A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C07A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C07A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C07A.PSDC */
        }
    }

    Scope (\_SB.SCK1.C07A)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C07A._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C07A._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C07A.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C07A.PSDC */
        }
    }

    Scope (\_SB.SCK0.C07B)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C07B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C07B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C07B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C07B.PSDC */
        }
    }

    Scope (\_SB.SCK1.C07B)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C07B._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C07B._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C07B.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C07B.PSDC */
        }
    }

    Scope (\_SB.SCK0.C07C)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C07C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C07C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C07C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C07C.PSDC */
        }
    }

    Scope (\_SB.SCK1.C07C)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C07C._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C07C._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C07C.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C07C.PSDC */
        }
    }

    Scope (\_SB.SCK0.C07D)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C07D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C07D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C07D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C07D.PSDC */
        }
    }

    Scope (\_SB.SCK1.C07D)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C07D._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C07D._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C07D.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C07D.PSDC */
        }
    }

    Scope (\_SB.SCK0.C07E)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C07E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C07E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C07E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C07E.PSDC */
        }
    }

    Scope (\_SB.SCK1.C07E)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C07E._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C07E._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C07E.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C07E.PSDC */
        }
    }

    Scope (\_SB.SCK0.C07F)
    {
        Name (SCKN, 0x00)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK0.C07F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK0.C07F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK0.C07F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK0.C07F.PSDC */
        }
    }

    Scope (\_SB.SCK1.C07F)
    {
        Name (SCKN, 0x01)
        OperationRegion (DBG0, SystemIO, 0x80, 0x02)
        Field (DBG0, ByteAcc, NoLock, Preserve)
        {
            IO80,   8, 
            IO81,   8
        }

        Name (TYPE, 0x80000000)
        Method (HWPT, 0, NotSerialized)
        {
            If ((((HWEN == 0x01) || (HWEN == 0x03)) && !(SDTL & 
                0x02)))
            {
                SDTL |= 0x02
                LoadTable ("OEM2", "INTEL", "CPU  HWP", "", "", Zero)
            }
        }

        Method (ISTT, 0, NotSerialized)
        {
            If ((((PSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x01)))
            {
                SDTL |= 0x01
                LoadTable ("OEM1", "INTEL", "CPU EIST", "", "", Zero)
            }
        }

        Method (TSTT, 0, NotSerialized)
        {
            If ((((TSEN == 0x01) && ((HWEN == 0x00) || (HWEN == 
                0x01))) && !(SDTL & 0x04)))
            {
                SDTL |= 0x04
                LoadTable ("OEM3", "INTEL", "CPU  TST", "", "", Zero)
            }
        }

        Method (CSTT, 0, NotSerialized)
        {
            If (((CSEN == 0x01) && !(SDTL & 0x08)))
            {
                SDTL |= 0x08
                LoadTable ("OEM4", "INTEL", "CPU  CST", "", "", Zero)
            }
        }

        Method (_PDC, 1, Serialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
        }

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_SB_.SCK1.C07F._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953"))
            CreateDWordField (UID0, 0x00, EID0)
            CreateDWordField (UID0, 0x04, EID1)
            CreateDWordField (UID0, 0x08, EID2)
            CreateDWordField (UID0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            If (((TYPE & 0x09) == 0x09))
            {
                ISTT ()
            }

            If ((HWPS == 0x01))
            {
                HWPT ()
            }

            If (((TYPE & 0x08) == 0x08))
            {
                TSTT ()
            }

            If (((TYPE & 0x18) == 0x18))
            {
                CSTT ()
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_SB_.SCK1.C07F._OSC.CAP0 */
            Return (Arg3)
        }

        Name (PSDC, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFC, 
                0x00000002
            }
        })
        Name (PSDE, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x7FFFFFFF, 
                0xFE, 
                0x00000002
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((((TYPE & 0x0820) == 0x0820) && (HWAL == 0x00)))
            {
                Return (PSDE) /* \_SB_.SCK1.C07F.PSDE */
            }

            Return (PSDC) /* \_SB_.SCK1.C07F.PSDC */
        }
    }
}

